# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.directnic.com/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/parsers/whois.directnic.com.rb'

describe Whois::Parsers::WhoisDirectnicCom, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.directnic.com/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file))
    described_class.new(part)
  end

  describe "#domain" do
    it do
      expect(subject.domain).to eq("directnic.com")
    end
  end
  describe "#domain_id" do
    it do
      expect(subject.domain_id).to eq("19525357_DOMAIN_COM-VRSN")
    end
  end
  describe "#status" do
    it do
      expect(subject.status).to eq(:registered)
    end
  end
  describe "#available?" do
    it do
      expect(subject.available?).to eq(false)
    end
  end
  describe "#registered?" do
    it do
      expect(subject.registered?).to eq(true)
    end
  end
  describe "#created_on" do
    it do
      expect(subject.created_on).to be_a(Time)
      expect(subject.created_on).to eq(Time.parse("2000-02-09 17:22:12 UTC"))
    end
  end
  describe "#expires_on" do
    it do
      expect(subject.expires_on).to be_a(Time)
      expect(subject.expires_on).to eq(Time.parse("2020-02-09 17:22:12 UTC"))
    end
  end
  describe "#registrar" do
    it do
      expect(subject.registrar).to be_a(Whois::Parser::Registrar)
      expect(subject.registrar.id).to eq("291")
      expect(subject.registrar.name).to eq("DNC Holdings, Inc.")
      expect(subject.registrar.organization).to eq("DNC Holdings, Inc.")
      expect(subject.registrar.url).to eq("http://www.directnic.com")
    end
  end
  describe "#registrant_contacts" do
    it do
      expect(subject.registrant_contacts).to be_a(Array)
      expect(subject.registrant_contacts.size).to eq(1)
      expect(subject.registrant_contacts[0]).to be_a(Whois::Parser::Contact)
      expect(subject.registrant_contacts[0].type).to eq(Whois::Parser::Contact::TYPE_REGISTRANT)
      expect(subject.registrant_contacts[0].name).to eq("Direct Privacy")
      expect(subject.registrant_contacts[0].organization).to eq("Savvy Investments, LLC Privacy ID# 472417")
      expect(subject.registrant_contacts[0].address).to eq("2123 Pioneer Ave")
      expect(subject.registrant_contacts[0].city).to eq("Cheyenne")
      expect(subject.registrant_contacts[0].zip).to eq("82001")
      expect(subject.registrant_contacts[0].state).to eq("WY")
      expect(subject.registrant_contacts[0].country_code).to eq("US")
      expect(subject.registrant_contacts[0].phone).to eq("+1.5043215074")
      expect(subject.registrant_contacts[0].fax).to eq("")
      expect(subject.registrant_contacts[0].email).to eq("directnic.com@domainvault.io")
    end
  end
  describe "#admin_contacts" do
    it do
      expect(subject.admin_contacts).to be_a(Array)
      expect(subject.admin_contacts.size).to eq(1)
      expect(subject.admin_contacts[0]).to be_a(Whois::Parser::Contact)
      expect(subject.admin_contacts[0].type).to eq(Whois::Parser::Contact::TYPE_ADMINISTRATIVE)
      expect(subject.admin_contacts[0].name).to eq("Direct Privacy")
      expect(subject.admin_contacts[0].organization).to eq("Savvy Investments, LLC Privacy ID# 472417")
      expect(subject.admin_contacts[0].address).to eq("2123 Pioneer Ave")
      expect(subject.admin_contacts[0].city).to eq("Cheyenne")
      expect(subject.admin_contacts[0].zip).to eq("82001")
      expect(subject.admin_contacts[0].state).to eq("WY")
      expect(subject.admin_contacts[0].country_code).to eq("US")
      expect(subject.admin_contacts[0].phone).to eq("+1.5043215074")
      expect(subject.admin_contacts[0].fax).to eq("")
      expect(subject.admin_contacts[0].email).to eq("directnic.com@domainvault.io")
    end
  end
  describe "#technical_contacts" do
    it do
      expect(subject.technical_contacts).to be_a(Array)
      expect(subject.technical_contacts.size).to eq(1)
      expect(subject.technical_contacts[0]).to be_a(Whois::Parser::Contact)
      expect(subject.technical_contacts[0].type).to eq(Whois::Parser::Contact::TYPE_TECHNICAL)
      expect(subject.technical_contacts[0].name).to eq("Direct Privacy")
      expect(subject.technical_contacts[0].organization).to eq("Savvy Investments, LLC Privacy ID# 472417")
      expect(subject.technical_contacts[0].address).to eq("2123 Pioneer Ave")
      expect(subject.technical_contacts[0].city).to eq("Cheyenne")
      expect(subject.technical_contacts[0].zip).to eq("82001")
      expect(subject.technical_contacts[0].state).to eq("WY")
      expect(subject.technical_contacts[0].country_code).to eq("US")
      expect(subject.technical_contacts[0].phone).to eq("+1.5043215074")
      expect(subject.technical_contacts[0].fax).to eq("")
      expect(subject.technical_contacts[0].email).to eq("directnic.com@domainvault.io")
    end
  end
  describe "#nameservers" do
    it do
      expect(subject.nameservers).to be_a(Array)
      expect(subject.nameservers.size).to eq(2)
      expect(subject.nameservers[0]).to be_a(Whois::Parser::Nameserver)
      expect(subject.nameservers[0].name).to eq("ns0.directnic.com")
      expect(subject.nameservers[1]).to be_a(Whois::Parser::Nameserver)
      expect(subject.nameservers[1].name).to eq("ns1.directnic.com")
    end
  end
end
